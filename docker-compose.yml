version: "3.9"
services:
  postgres:
    image: postgres:15
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  collector:
    image: python:3.11-slim
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    working_dir: /app
    volumes:
      - ./collector:/app/collector
      - ./requirements.txt:/app/requirements.txt
    command: bash -lc "pip install -r requirements.txt && python collector/main.py"
    restart: "no"

  api:
    image: python:3.11-slim
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    working_dir: /app
    volumes:
      - ./api:/app/api
      - ./model:/app/model
      - ./requirements.txt:/app/requirements.txt
    command: bash -lc "pip install -r requirements.txt && uvicorn api.app:app --host 0.0.0.0 --port ${API_PORT}"
    ports:
      - "8000:8000"

  web:
    image: python:3.11-slim
    depends_on:
      - api
    working_dir: /app
    volumes:
      - ./web:/app/web
    command: bash -lc "python -m http.server 8080 --directory web"
    ports:
      - "8080:8080"

volumes:
  pgdata:
